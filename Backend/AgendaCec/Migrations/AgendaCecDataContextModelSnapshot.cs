// <auto-generated />
using System;
using AgendaCec.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaCec.Migrations
{
    [DbContext(typeof(AgendaCecDataContext))]
    partial class AgendaCecDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AgendaCec.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PilarId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PilarId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AgendaCec.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("AgendaCec.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HoraFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.Property<int>("InstrutorId")
                        .HasColumnType("int");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("InstrutorId");

                    b.HasIndex("LocalId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("AgendaCec.Models.Instrutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PilarId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PilarId");

                    b.ToTable("Instrutores");
                });

            modelBuilder.Entity("AgendaCec.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<bool>("Informatizada")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locais");
                });

            modelBuilder.Entity("AgendaCec.Models.Pilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pilares");
                });

            modelBuilder.Entity("AgendaCec.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroAlunos")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("DisciplinaInstrutor", b =>
                {
                    b.Property<int>("DisciplinasId")
                        .HasColumnType("int");

                    b.Property<int>("InstrutoresId")
                        .HasColumnType("int");

                    b.HasKey("DisciplinasId", "InstrutoresId");

                    b.HasIndex("InstrutoresId");

                    b.ToTable("DisciplinaInstrutor");
                });

            modelBuilder.Entity("DisciplinaTurma", b =>
                {
                    b.Property<int>("DisciplinasId")
                        .HasColumnType("int");

                    b.Property<int>("TurmasId")
                        .HasColumnType("int");

                    b.HasKey("DisciplinasId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("DisciplinaTurma");
                });

            modelBuilder.Entity("AgendaCec.Models.Area", b =>
                {
                    b.HasOne("AgendaCec.Models.Pilar", "Pilar")
                        .WithMany("Areas")
                        .HasForeignKey("PilarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilar");
                });

            modelBuilder.Entity("AgendaCec.Models.Disciplina", b =>
                {
                    b.HasOne("AgendaCec.Models.Area", "Area")
                        .WithMany("Disciplinas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("AgendaCec.Models.Evento", b =>
                {
                    b.HasOne("AgendaCec.Models.Area", null)
                        .WithMany("Eventos")
                        .HasForeignKey("AreaId");

                    b.HasOne("AgendaCec.Models.Disciplina", "Disciplina")
                        .WithMany("Eventos")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaCec.Models.Instrutor", "Instrutor")
                        .WithMany("Eventos")
                        .HasForeignKey("InstrutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaCec.Models.Local", "Local")
                        .WithMany("Eventos")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaCec.Models.Turma", "Turma")
                        .WithMany("Eventos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Instrutor");

                    b.Navigation("Local");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("AgendaCec.Models.Instrutor", b =>
                {
                    b.HasOne("AgendaCec.Models.Pilar", "Pilar")
                        .WithMany("Instrutores")
                        .HasForeignKey("PilarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilar");
                });

            modelBuilder.Entity("DisciplinaInstrutor", b =>
                {
                    b.HasOne("AgendaCec.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DisciplinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaCec.Models.Instrutor", null)
                        .WithMany()
                        .HasForeignKey("InstrutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinaTurma", b =>
                {
                    b.HasOne("AgendaCec.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DisciplinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendaCec.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgendaCec.Models.Area", b =>
                {
                    b.Navigation("Disciplinas");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("AgendaCec.Models.Disciplina", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("AgendaCec.Models.Instrutor", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("AgendaCec.Models.Local", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("AgendaCec.Models.Pilar", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Instrutores");
                });

            modelBuilder.Entity("AgendaCec.Models.Turma", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
